#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
#export CLICOLOR=1
# light background
#export LSCOLORS=ExFxCxDxBxegedabagacad
# dark background
#export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
export LSCOLORS="exfxcxdxbxegedabagacad"

export GOPATH=$HOME/dev/go

export DOCKER_TLS_VERIFY="1"
export DOCKER_HOST="tcp://172.16.204.132:2376"
export DOCKER_CERT_PATH="/Users/ed/.docker/machine/machines/default"
export DOCKER_MACHINE_NAME="default"
# Run this command to configure your shell:
# # eval "$(docker-machine env default)"
export NVM_DIR=~/.nvm
source $(brew --prefix nvm)/nvm.sh

export VSCODE_PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

export ANDROID_HOME=~/Library/Android/sdk
#
export PATH=$PATH:~/bin:~/.cabal/bin:~/.haskell-vim-now/bin:$GOPATH/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools:$VSCODE_PATH

export EDITOR=vim
export VISUAL=code
export GIT_EDITOR=code

alias vi=vim
alias tma='tmux attach -d -t'
alias tmn='tmux new -s $(basename $(pwd))'
alias tml='tmux list-sessions'
alias f='find . -name'
alias ghc-sandbox="ghc -no-user-package-db -package-db .cabal-sandbox/*-packages.conf.d"
alias ghci-sandbox="ghci -no-user-package-db -package-db .cabal-sandbox/*-packages.conf.d"
alias runhaskell-sandbox="runhaskell -no-user-package-db -package-db .cabal-sandbox/*-packages.conf.d"

function cabal_sandbox_info() {
    cabal_files=(*.cabal(N))
    if [ $#cabal_files -gt 0 ]; then
        if [ -f cabal.sandbox.config ]; then
            echo "%{$fg[green]%}sandboxed%{$reset_color%}"
        else
            echo "%{$fg[red]%}not sandboxed%{$reset_color%}"
        fi
    fi
}

RPROMPT="\$(cabal_sandbox_info) $RPROMPT"

unsetopt CORRECT                      # Disable autocorrect guesses.
                                      # Happens when typing a wrong
                                      # command that may look like an existing one.

expand-or-complete-with-dots() {      # This bunch of code displays
                                      # red dots when autocompleting
  echo -n "\e[31m......\e[0m"         # a command with the tab key,
                                      # "Oh-my-zsh"-style.
  zle expand-or-complete
  zle redisplay
}
zle -N expand-or-complete-with-dots
bindkey "^I" expand-or-complete-with-dots

if [[ -s "/usr/local/share/zsh/site-functions/_aws" ]]; then
  source /usr/local/share/zsh/site-functions/_aws
fi
if [[ -s "/usr/local/share/zsh/site-functions/_docker" ]]; then
  source /usr/local/share/zsh/site-functions/_docker
fi
if [[ -s "/usr/local/share/zsh/site-functions/_docker-compose" ]]; then
  source /usr/local/share/zsh/site-functions/_docker-compose
fi
if [[ -s "/Users/ed/.nix-profile/etc/profile.d/nix.sh" ]]; then
  source /Users/ed/.nix-profile/etc/profile.d/nix.sh
fi
if [[ -s "/usr/local/share/zsh/site-functions/_flow" ]]; then
  source /usr/local/share/zsh/site-functions/_flow
fi

# Incremental search
bindkey -M vicmd "/" history-incremental-search-backward
bindkey -M vicmd "?" history-incremental-search-forward

# Search based on what you typed already
bindkey -M vicmd "//" history-beginning-search-backward
bindkey -M vicmd "??" history-beginning-search-forward

bindkey -M vicmd "q" push-line
